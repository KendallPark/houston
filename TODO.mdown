# To Do

### Soon

 - **Project:** allow changing Git URL (have tmp folder deleted or whatever)
 - **Testing Report:**
   - show progress of testing (JavaScript pie graph, updated in real time)
   - add an option to refresh tickets
 - **Weekly Report:**
   - Problems history: off by 1 week?
   - Extract WeeklyReport model from WeeklyReports#show
   - split notice count by project
 - **Release:**
   - allow adding/removing _tickets_ from release notes
   - show ticket/change counts in real time
 - **Release Emails:** have up-to-date commits
 - Implement caching
   - start with list of Rails versions from Rubygems
   - and New Relic API calls


### Eventually

 - **Kanban:** optimize rendering tickets on the server
 - **Release Email:** add _retest_ group for testing update
 - **Project:** allow manually updating commits
 - **Weekly Report:** group into supersections
   - "Productivity", "Maintenance", "Development" [?]
   - "Effort", "Task" | "Us", "Them" | "Red", "Blue"


### Refactoring and Configuration

 - Get rid of "environments"; have two hard-coded ones, Testing and Production, or make them user-configurable
 - Refactor hard-coded knowledge about Unfuddle/EP into configuration
   - "in_testing" queue for "Testing Report"
   - "deployment" for "Production" badge on tickets
   - "goldmine" for Release notes


### Ideas

 - **Post-Receive:** use update event instead?
 - **Weekly Report:**
   - add a CFD for tickets
   - add rate of closure for exceptions
   - add a **Security** [?] section that shows key dependencies (Rails & Devise)
   
        key_dependencies do
          gem "rails"
          gem "devise"
        end
   
   - add a Customer Satisfaction metric
   - add "Superlatives"
     - most total commits per week/day
     - most commits to a project per week/day
     - most projects committed to per week
     - first commit to a project per developer
 - **Tester Wall**:
   - Show verdicts for finished tickets
   - Implement tickets accordian-style
 - **Testing Report:**
   - Give a way of prioritizing / flagging tickets
   - Expland/collapse all
   - Send notification for 'none' verdict
 - Log in with your Unfuddle credentials
   - use API GET `users/current` to validate
   - implement in a modular way: easy to replace if Unfuddle is replaced
   - activity in Unfuddle is performed as you
   - icon indicating linkage in Kanban
   - handle Unfuddle access denied errors like CanCan ones
   - store password securely!

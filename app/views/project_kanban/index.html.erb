<a id="full_screen_link">Full Screen</a>

<%= render partial: "kanban/kanban", locals: {projects: [@project]} %>

<div id="modal" style='display:none;padding:15px;' class='modal'>
  <form action="kanban/<%= @project.slug %>/staged_for_development" method="POST">
    <label for="ticket_number"><h3>Input Unfuddle Ticket Number</h3></label>
    <input type="text" name="ticket_number" value="" id="ticket_number">
    <input type="submit" value="Fetch Ticket">
  </form>
  <div id="error"></div>
</div>

<% content_for :scripts do %>
  <script type="text/javascript">
    $(function() {
      
      window.kanban = new Kanban({
        projects: [{slug: '<%= @project.slug %>', color: '<%= @project.color %>'}],
        queues: <%= raw KanbanQueue.slugs %>
      });
      
      kanban.loadQueues();
      
      function autoUpdate() {
        kanban.el.addClass('auto-update');
        $('#auto_update').remove();
        $('#timer_wrapper').fadeIn();
        new Refresher({time: 300000, callback: kanban.loadQueues.bind(kanban)}); // 5 minutes
      }
      
      $('#auto_update').click(function() {
        autoUpdate();
        window.location.hash = kanban.el.attr('class');
      });
      
      $('#full_screen_link').click(function() {
        kanban.showFullScreen();
        window.location.hash = kanban.el.attr('class');
      });
      
      $(document).keydown(function(e) {
        if(e.keyCode == 27) {
          kanban.showNormal();
          window.location.hash = kanban.el.attr('class');
        }
      });
      
      var options = window.location.hash.substring(1).split(' ');
      if(_.include(options, 'full-screen')) kanban.showFullScreen();
      if(_.include(options, 'auto-update')) autoUpdate();
      
      
      
      $('.kanban-column')
        .addClass('clickable')
        .hover(function() {
            var queue = $(this).attr('data-queue');
            $('.kanban-column[data-queue="' + queue + '"]').addClass('hover');
          }, function() {
            var queue = $(this).attr('data-queue');
            $('.kanban-column[data-queue="' + queue + '"]').removeClass('hover');
          })
        .click(function(e) {
            var $target = $(e.target);
            if($target.is('a') || $target.parents('a').length > 0) {
              return true;
            } else {
              window.location = window.location.pathname + '/' + $(this).attr('data-queue');
              return false;
            }
          });
      
      var $form = $('#modal form'),
          basePath = $form.attr('action') + '/';
      
      function createPlaceholder($queue) {
        return $('<li class="ticket placeholder"><a data-toggle="modal" href="#modal"><span class="add-ticket">+<span></a></li>')
          .appendTo($queue)
          .pseudoHover()
          .popover({
            title: 'Add Ticket',
            content: 'Click to add a ticket to the queue' });
      }
      
      kanban.observe('queueLoaded', function(queueName, project) {
        var $queue = $('#' + queueName);
        var $column = $queue.closest('.kanban-column');
        if($column.hasClass('manual')) {
          var numberOfTickets = $queue.find('.ticket.' + project.slug).length;
          for(i=numberOfTickets, ii=<%= @project.number_of_slots %>; i<ii; i++) {
            createPlaceholder($queue);
          }
        }
      });
      
      // Change border style of ticket about to be deleted
      $(document).keydown(function(e) {
        $ticket = $('.kanban-column.manual .ticket:not(.placeholder) a:hover');
        if(e.shiftKey && ($ticket.length > 0)) {
          $ticket.closest('.ticket').css({'border-style':'dashed'});
        }
      });
      $(document).keyup(function() {
        $('.kanban-column.manual .ticket:not(.placeholder)').css({'border-style':'solid'});
      });
      
      $('.kanban-column.manual').delegate('.ticket:not(.placeholder) a', 'click', function(e) {
        if(e.shiftKey) {
          e.stopImmediatePropagation();
          var $ticket = $(this).closest('.ticket'),
              ticket_number = $ticket.attr('data-number'),
              url = basePath + ticket_number,
              xhr = $.destroy(url);
          xhr.success(function() {
            $ticket.remove();
            $('.popover').remove();
            createPlaceholder();
          });
          xhr.error(function() {
            window.console.log('error', arguments)
          });
          return false;
        }
      });
      
      $form.submit(function(e) {
        var ticket_number = $('#ticket_number').val(),
            url = basePath + ticket_number,
            xhr = $.put(url);
        xhr.success(function(ticket) {
          $('#modal').modal('hide');
          var $queue = $('#' + ticket.queue);
          var $placeholder = $queue.find('.ticket.placeholder').first();
          $(kanban.renderTicket(ticket))
                .replaceAll($placeholder)
                .popoverForTicket()
                .pseudoHover();
        });
        xhr.error(function(e) {
          $('#modal #error').text(JSON.parse(e.responseText).errors[0]);
        });
        return false;
      });
      
    });
  </script>
<% end %>

<div class="weekly-report">
  <h1 class="weekly-report-heading">
    Weekly Report
    <span class="subtitle">
      <%= link_to "Prev", weekly_report_path(1.week.until(@date_range.begin)) unless for_email? %>
      Week of <b><%= @date_range.begin.strftime("%B %e") %></b><% if @date_range.begin.year != Date.today.year %>, <%= @date_range.begin.year %><% end %>
      <% next_date = 1.week.since(@date_range.begin) %>
      <% unless for_email? %>
        <% if next_date <= Date.today %>
          <%= link_to "Next", weekly_report_path(next_date) %>
        <% else %>
          <span class="disabled">Next</span>
        <% end %>
      <% end %>
    </span>
  </h1>
  
  <%
    
    weekday_by_wday = %w{Weekend Monday Tuesday Wednesday Thursday Friday Weekend}
    weekdays = %w{Monday Tuesday Wednesday Thursday Friday Weekend}
    commits_by_weekday = Hash[weekdays.zip([[], [], [], [], [], []])]
    weekday_commits_by_project = {}
    projects_with_commits = 0
    total_commits = 0
    total_bugs = 0
    commits_by_week_by_project = Hash[@projects.zip]
    
    testing_notes_by_weekday = Hash[weekdays.zip([[], [], [], [], [], []])]
    
    weeks_of_commit_history = 26
    date_range_multiweek = ((weeks_of_commit_history - 1).weeks.before(@date_range.begin))..@date_range.end
    commit_history_weeks = date_range_multiweek.step(7)
    
    weeks_of_errbit_history = 16
    date_range_multiweek2 = ((weeks_of_errbit_history - 1).weeks.before(@date_range.begin))..@date_range.end
    errbit_history_weeks = date_range_multiweek2.step(7)
    
    time_range = @date_range.begin.beginning_of_day.to_time.to_i...@date_range.end.end_of_day.to_time.to_i
    time_range_multiweek = date_range_multiweek.begin.beginning_of_day.to_time.to_i...date_range_multiweek.end.end_of_day.to_time.to_i
    
    
    
    fails = 0
    passes = 0
    color = "666666"
    benchmark("Preparing data for testing activity") do
      testing_notes = TestingNote.where(:created_at => @date_range).where(["verdict != ?", "none"])
      
      testing_notes.each do |testing_note|
        weekday = weekday_by_wday[testing_note.created_at.wday]
        
        if testing_note.fail?
          fails += 1
          color = "BB2121"
        else
          passes += 1
          color = "67C741"
        end
        testing_notes_by_weekday[weekday].push(color: color)
      end
      
    end
    
    
    
    benchmark("Preparing data for commits graphs") do
      @projects.each do |project|
        
        commits_by_week = (commits_by_week_by_project[project] ||= Hash[commit_history_weeks.zip([0]*weeks_of_commit_history)])
        commits_this_week = false
        
        
        # commits = benchmark("[#{project.slug}] read commits") {
        #   `git --git-dir=#{project.git_dir} log --all --pretty='%at'`.split(/\n/).uniq
        # }
        commits = `git --git-dir=#{project.git_dir} log --all --pretty='%at'`.split(/\n/).uniq
        
        commits.each do |commit|
          timestamp = commit.to_i
          
          if time_range_multiweek.include?(timestamp)
            time = Time.at(timestamp)
            date = time.to_date
            
            week = date.beginning_of_week
            next unless commits_by_week.key?(week)
            commits_by_week[week] = commits_by_week[week] + 1
            
            if time_range.include?(timestamp)
              weekday = weekday_by_wday[date.wday]
              weekday = "Weekend" unless (6..18).cover?(time.hour)
              
              weekday_commits_by_project[project] = weekday_commits_by_project.fetch(project, 0) + 1 unless weekday == "Weekend"
              commits_by_weekday[weekday].push(color: project.color, project: project.name)
              commits_this_week = true
              total_commits += 1
            end
          end
        end
        
        
        
        projects_with_commits += 1 if commits_this_week
      end
    end
    
    
    
    bug_counts_by_project = {}
    bugs_by_week_by_project = Hash[@projects.zip]
    bugs_new_this_week = 0
    bugs_fixed_this_week = 0
    bugs_change_this_week = 0
    
    benchmark("Preparing data for bugs graphs") do
      
      bugs = Bug.during(date_range_multiweek2)
      
      bugs.each do |bug|
        project = @projects.detect { |project| project.errbit_app_id == bug.errbit_app_id }
        bugs_by_week = (bugs_by_week_by_project[project] ||= Hash[errbit_history_weeks.zip([0]*weeks_of_errbit_history)])
        bug_counts = (bug_counts_by_project[project] ||= {"fixed" => 0, "new" => 0, "open" => 0})
        
        errbit_history_weeks.each do |week|
          
          # open during week?
          if (bug.first_notice_at < week) && (bug.resolved_at.nil? || bug.resolved_at >= 7.days.after(week))
            bugs_by_week[week] += 1
          end
          
        end
        
        if (bug.first_notice_at < @date_range.end) && (bug.resolved_at.nil? || bug.resolved_at >= @date_range.begin)
          
          status = bug.resolved? ? "fixed" : (bug.first_notice_at >= @date_range.begin) ? "new" : "open"
          bug_counts[status] += 1
          
        end
        bugs_new_this_week += 1 if bug.first_notice_at < @date_range.end && bug.first_notice_at > @date_range.begin
        bugs_fixed_this_week += 1 if bug.resolved_at && bug.resolved_at < @date_range.end && bug.resolved_at > @date_range.begin
        
      end
      
      bugs_change_this_week = bugs_new_this_week - bugs_fixed_this_week
    end
    
    
    
    notices_by_week = Hash[errbit_history_weeks.zip([0]*weeks_of_errbit_history)]
    
    benchmark("Preparing data for notices graphs") do
      
      notices = Notice.during(date_range_multiweek2)
      
      notices.each do |notice|
        week = notice.created_at.beginning_of_week.to_date
        next unless notices_by_week.key?(week) # we're getting notices for the monday after the sunday that should end the range
        notices_by_week[week] += 1
      end
      
    end
    
    
    
    colors = Rails.application.config.colors
    
  %>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-award-48.png"), size: "48" %>
    Superlatives
  </h3>
  
  <div class="weekly-report-body">
    
    <h3 style="color: #bbb;">Coming soon</h3>
    
  </div>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-git-48.png"), size: "48" %>
    Commits
  </h3>
  
  <div class="weekly-report-body">
    
    <table class="layout">
      <tr>
        <td colspan="2">
    
          <table class="commits">
            <thead>
              <tr>
                <% weekdays[0...5].each do |weekday| %>
                  <th width="80" class="<%= weekday.downcase %>"><%= weekday %></th>
                <% end %>
                <th width="80" class="weekend">Evening,<br />Weekend</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <% weekdays.each do |weekday| %>
                  <td width="80" class="<%= weekday.downcase %>">
                    <% commits_by_weekday[weekday].each do |commit| %><b class="commit bubble <%= commit[:color] %>" rel="tooltip" title="<%= commit[:project] %>"></b><% end %>
                  </td>
                <% end %>
                
                <td>
                  <%= score_card :large do |s| %>
                    <% s.score (total_commits == 1 ? "Commit" : "Commits"), total_commits, :class => "total-commits" %>
                    <% s.score (projects_with_commits == 1 ? "Project" : "Projects"), projects_with_commits, :class => "total-projects" %>
                  <% end %>
                </td>
              </tr>
            </tbody>
          </table>
        
        </td>
      </tr>
      
      <tr>
        <td width="40%">
          <%= pie_graph({
            data: weekday_commits_by_project.values,
            colors: weekday_commits_by_project.keys.map { |project| colors[project.color] },
            labels: weekday_commits_by_project.keys.map(&:name),
            width: 320,
            height: 80,
            title: "Focus this week"
          }) %>
        </td>
        
        <td width="60%">
          <%= bar_graph({
            data: @projects.map { |project| commits_by_week_by_project[project].values },
            colors: @projects.map { |project| colors[project.color] },
            count: weeks_of_commit_history,
            height: 80,
            title: "#{weeks_of_commit_history}-week commit history"
          }) %>
        </td>
      </tr>
      
    </table>
    
  </div>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-flask-48.png"), size: "48" %>
    Testing Notes
  </h3>
  
  <div class="weekly-report-body">
    
    <table class="layout">
      <tr>
        <td colspan="2">
    
          <table class="testing-notes no-bottom-margin">
            <thead>
              <tr>
                <% weekdays.each do |weekday| %>
                  <th width="80" class="<%= weekday.downcase %>"><%= weekday %></th>
                <% end %>
                <td></td>
              </tr>
            </thead>
            <tbody>
              <tr>
                <% weekdays.each do |weekday| %>
                  <td width="80" class="<%= weekday.downcase %>">
                    <% testing_notes_by_weekday[weekday].each do |testing_note| %><b class="testing-note-bubble bubble" style="background-color:#<%= testing_note[:color] %>"></b><% end %>
                  </td>
                <% end %>

                <td rowspan="2">
                  <%= score_card :large do |s| %>
                    <% s.score (passes == 1 ? "Pass" : "Passes"), passes, :class => "testing-note-passes" %>
                    <% s.score (fails == 1 ? "Fail" : "Fails"), fails, :class => "testing-note-fails" %>
                  <% end %>
                </td>
              </tr>
              
              <tr>
                <td colspan="6">
                  <%
                    tickets_by_weekday = Hash[weekdays.zip([0, 0, 0, 0, 0, 0])]
                    
                    @date_range.each do |date|
                      weekday = weekday_by_wday[date.wday]
                      tickets_by_weekday[weekday] = TicketQueue.in_queue(:in_testing).during(date).count
                    end
                    
                    tickets_by_weekday = tickets_by_weekday.values
                    max = tickets_by_weekday.max
                    
                    width = 600
                    height = 100
                  %>
                  
                  <%= image_tag Gchart.line({
                    data: tickets_by_weekday,
                    size: "#{width}x#{height}"}) <<
                    "chf=bg,s,FFFFFF00&chco=3399CC&chm=B,3399CC22,0,0,0&chxt=r&chxr=0,0,#{max}",
                    width: width,
                    height: height,
                    alt: "Tickets in testing each day",
                    style: "margin-right: -16px; margin-top: 6px;" %><!-- This bumps the labels out to the right -->
                    
                    <h5>Tickets in testing each day</h5>
                </td>
              </tr>
            </tbody>
          </table>
        
        </td>
      </tr>
      
    </table>
    
  </div>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-bug-48.png"), size: "48" %>
    Exceptions
  </h3>
  
  <div class="weekly-report-body">
    <table class="layout exceptions-report">
      <tr>
        <td class="exceptions-notices-count">
          <p class="score">
            <span class="notices-count score-count"><%= notices_by_week.values.last %></span>
            <span class="notices-label score-label">Notices this week</span>
          </p>
        </td>
        <td class="exceptions-notices-pie">
          <div class="notices-by-project-pie"><span style="color: #bbb; font-weight: bold;">Coming soon</span></div>
        </td>
        <td class="exceptions-problem-count" rowspan="2">
          <%
            cumulative_totals = [0] * weeks_of_errbit_history

            projects_included = []

            data = @projects.map do |project|
              values = bugs_by_week_by_project[project]
              if values
                projects_included << project
                values = values.values
              else
                next
              end

              values.each_with_index do |value, i|
                cumulative_totals[i] += value
              end
              cumulative_totals.dup
            end
            data.compact!
          
            colors_included = projects_included.map { |project| colors[project.color] }
          %>
          <%= area_graph({
            data: data,
            colors: colors_included,
            width: 392,
            height: 152,
            title: "#{weeks_of_errbit_history}-week problem count"
          }) %>
        </td>
        <td class="exceptions-summary" rowspan="2">
          <div class="exceptions-bugs-summary-group">
            <p class="exceptions-bugs-summary new-bugs <%= bugs_new_this_week.zero? ? "zero" : "positive" %>">
              <span class="bug-count"><span class="sign">+</span><%= bugs_new_this_week %></span> <%= image_tag(image_url("bug-new-32.png"), size: 32, :class => "bug") %>
            </p>
            <p class="exceptions-bugs-summary resolved-bugs <%= bugs_fixed_this_week.zero? ? "zero" : "negative" %>">
              <span class="bug-count"><span class="sign">–</span><%= bugs_fixed_this_week %></span> <%= image_tag(image_url("bug-fixed-32.png"), size: 32, :class => "bug") %>
            </p>
          </div>
          
          <% if bugs_change_this_week == 0 %>
            <p class="exceptions-bugs-summary total-bugs zero">
              <span class="bug-count">0</span><%= image_tag image_url("bug-zero-128.png"), size: 118 %>
            </p>
          <% elsif bugs_change_this_week < 0 %>
            <p class="exceptions-bugs-summary total-bugs negative" style="-webkit-box-shadow: inset 0 0 <%= -bugs_change_this_week * 2 %>px #42A800; <%= "letter-spacing: -0.15em; text-indent: -0.25em;" if (10..19).cover?(-bugs_change_this_week) %>">
              <span class="bug-count"><%= -bugs_change_this_week %></span><%= image_tag image_url("bug-fixed-128.png"), size: 118 %>
            </p>
          <% else %>
            <p class="exceptions-bugs-summary total-bugs positive" style="-webkit-box-shadow: inset 0 0 <%= bugs_change_this_week * 2 %>px #E00000; <%= "letter-spacing: -0.15em; text-indent: -0.25em;" if (10..19).cover?(bugs_change_this_week) %>">
              <span class="bug-count"><%= bugs_change_this_week %></span><%= image_tag image_url("bug-new-128.png"), size: 118 %>
            </p>
          <% end %>
          
          
        </td>
      </tr>
      
      <tr>
        <td class="exceptions-notices-history" colspan="2">
          <%= bar_graph({
            data: notices_by_week.values,
            colors: "d0d0d0",
            count: weeks_of_errbit_history,
            height: 54,
            axes: false,
            title: "#{weeks_of_errbit_history}-week notice levels"
          }) %>
        </td>
      </tr>
      
    </table>
    
    <table class="layout bugs">
      <tbody>
        <% @projects.each do |project| %>
          <% next if project.errbit_app_id.blank? %>
          <% bug_counts = bug_counts_by_project[project] || {} %>
          <tr>
            <th><span class="label <%= project.color %>"><%= project.name %></span></th>
            <% if bug_counts.values.sum > 0 %>
              <td>
                <% bug_counts["new"].times do %>
                  <%= image_tag(image_url("bug-new-32.png"), size: 32, :class => "bug new-bug") %>
                <% end %>
                <% bug_counts["open"].times do %>
                  <%= image_tag(image_url("bug-open-32.png"), size: 32, :class => "bug open-bug") %>
                <% end %>
                <% bug_counts["fixed"].times do %>
                  <%= image_tag(image_url("bug-fixed-32.png"), size: 32, :class => "bug fixed-bug") %>
                <% end %>
              </td>
              <td>
                <%= score_card :medium do |s| %>
                  <% s.score "New", bug_counts["new"], :class => "new-bugs",
                      :prefix => "<span class=\"sign\">+</span>".html_safe %>
                  <% s.score "Fixed", bug_counts["fixed"], :class => "resolved-bugs",
                          :prefix => "<span class=\"sign\">&ndash;</span>".html_safe %>
                  <% s.score "Open", bug_counts["open"] + bug_counts["new"], :class => "open-bugs" %>
                <% end %>
              </td>
            <% else %>
              <td></td>
              <td class="score score-large">
                <p class="no-bugs">No bugs!</p>
              </td>
            <% end %>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-newrelic-48.png"), size: "48" %>
    Performance
  </h3>
  
  <div class="weekly-report-body">
    
    <table class="layout">
      <tr>
        <td colspan="2">

          <table class="performance-report no-bottom-margin">
            <tbody>
              <% benchmark("Preparing data for performance report") do %>
                <% @projects.where("new_relic_id IS NOT NULL").each do |project| %>
                  <tr>
                    <th><span class="label <%= project.color %>"><%= project.name %></span></th>
                    <td>
                      <%
                          account_id = Rails.application.config.new_relic[:account_id]
                          api_key = Rails.application.config.new_relic[:api_key]
                          url = "https://api.newrelic.com/api/v1/accounts/#{account_id}/metrics/data.json"
                          url << "?begin=#{@date_range.begin.iso8601}&end=#{@date_range.end.iso8601}"
                          url << "&metrics[]=Apdex&field=score"
                          url << "&agent_id[]=#{project.new_relic_id}"
                        
                          response = Faraday.get(url) { |curl| curl.headers["x-api-key"] = api_key }
                          json = JSON.load(response.body)
                        
                          scores = json.map { |result| result["score"] }
                          width = 480
                          height = 80
                      %>
                    
                      <%= image_tag ("http://chart.apis.google.com/chart" <<
                           "?cht=lc&chs=#{width}x#{height}&chco=6CB7B7&chls=4,4,0&chf=bg,s,FFFFFF00" <<
                           "&chds=0.5,1&chd=t:#{scores.join(",")}" <<
                           "&chxt=r&chxr=0,0.5,1" <<
                           "&chm=r,FEF2F5,0,0.4,0|r,F7F6E2,0,0.7,0.4|r,E8F9E9,0,0.9,0.7|r,D9F9F9,0,1,0.9").html_safe,
                          width: width,
                          height: height %>
                    </td>
                  </tr>
                <% end %>
              <% end %>
            </tbody>
          </table>

        </td>
      </tr>
    </table>
    
  </div>
  
  
  
  <h3 class="heading">
    <%= image_tag image_url("heading-idea-48.png"), size: "48" %>
    Tickets
  </h3>
  
  <%
    
    unfuddle_projects = @projects.select { |project| !project.unfuddle_id.blank? }
    
    severities_colors = Changelog.config.severities
    
    arrivals_by_week_by_project = {}
    departures_by_week_by_project = {}
    open_tickets_by_project = {}
    tickets_by_severity_by_project = {}
    
    tickets = UnfuddleDump.load!.map { |ticket|
      ticket["created_at"] = ticket["created_at"].to_date
      ticket["closed_on"] = ticket["closed_on"].try(:to_date)
      ticket }
    
    unfuddle_projects.each do |project|
      
      tickets_for_project = tickets.select { |ticket| ticket["project_id"] == project.unfuddle_id }
      arrivals = tickets_for_project.map { |ticket| ticket["created_at"] }.select { |created_at| date_range_multiweek2.cover?(created_at) }
      departures = tickets_for_project.map { |ticket| ticket["closed_on"] }.select { |closed_on| closed_on && date_range_multiweek2.cover?(closed_on) }
      
      arrivals_by_week = Hash[errbit_history_weeks.zip([0]*weeks_of_errbit_history)]
      arrivals.each do |arrived_at|
        week = arrived_at.beginning_of_week
        arrivals_by_week[week] += 1 if arrivals_by_week.key?(week)
      end
      
      departures_by_week = Hash[errbit_history_weeks.zip([0]*weeks_of_errbit_history)]
      departures.each do |departed_at|
        week = departed_at.beginning_of_week
        departures_by_week[week] += 1 if departures_by_week.key?(week)
      end
      
      arrivals_by_week_by_project[project] = arrivals_by_week.values
      departures_by_week_by_project[project] = departures_by_week.values
      
      # "Arrive" all the tickets created before the first week and still open
      arrivals_by_week_by_project[project][0] += tickets_for_project.select { |ticket| ticket["created_at"] < date_range_multiweek2.first && ticket["closed_on"].nil? }.count
      
      open_tickets_this_week = tickets_for_project.select { |ticket| ticket["created_at"] <= date_range_multiweek2.end && (ticket["closed_on"].nil? || ticket["closed_on"] > date_range_multiweek2.end) }
      
      tickets_by_severity = tickets_by_severity_by_project[project] = Hash[severities_colors.values.zip([0] * severities_colors.values.length)]
      open_tickets_this_week.each do |ticket|
        severity = ticket["severity"]
        severity = nil if severity.blank?
        color = severities_colors[severity]
        tickets_by_severity[color] += 1
      end
      
      open_tickets_by_project[project] = open_tickets_this_week.count
      
    end
    
    # 68 is the height of a score row
    # 18 is the height of the label
    # height = 68 * unfuddle_projects.length - 22
    # height = 200 if height < 200
    # height = 700 if height > 700 # Google limits charts to 300000 pixels
    
    width = 826
    height = 300
    
  %>
  
  <div class="weekly-report-body">
    
    <table class="layout">
      <tr>
        <td>

          <table class="tickets-report">
            <!-- <thead>
              <tr>
                <th></th>
                <th colspan="2">Tickets by Severity</th>
                <td></td>
              </tr>
            </thead> -->
            <tbody>
              <% legend = false %>
              <% unfuddle_projects.each do |project| %>
                <tr>
                  <th><span class="label <%= project.color %>"><%= project.name %></span></th>
                  <td class="pie-graph">
                    <%= pie_graph(data_by_color: tickets_by_severity_by_project[project], width: 80) %>
                  </td>
                  <% unless legend; legend = true %>
                    <td class="legend severities-legend" rowspan="<%= unfuddle_projects.count %>">
                      <h5>Tickets by Severity</h5>
                      <ol>
                        <% severities_colors.each do |severity, color| %>
                          <li class="severity">
                            <b class="bubble" style="background-color: #<%= color %>;"></b>
                            <%= severity || "<em>None</em>".html_safe %>
                          </li>
                        <% end %>
                      </ol>
                    </td>
                  <% end %>
                  <td class="score score-large">
                    <%
                      new_tickets = arrivals_by_week_by_project[project].last
                      closed_tickets = departures_by_week_by_project[project].last
                      open_tickets = open_tickets_by_project[project]
                    %>
                    <%= score_card :large do |s| %>
                      <% s.score "New", new_tickets, :class => "ticket-count-new",
                          :prefix => "<span class=\"sign\">+</span>".html_safe %>
                      <% s.score "Fixed", closed_tickets, :class => "ticket-count-closed",
                              :prefix => "<span class=\"sign\">&ndash;</span>".html_safe %>
                      <% s.score "Open", open_tickets, :class => "ticket-count-open" %>
                    <% end %>
                  </td>
                </tr>
              <% end %>
            </tbody>
          </table>

        </td>
      </tr>
      <tr>
        <td class="tickets-cfd">
          
          <div class="cfd">
            <%= cumulative_flow_diagram({
              arrivals: arrivals_by_week_by_project.values,
              departures: departures_by_week_by_project.values,
              colors: unfuddle_projects.map { |project| colors[project.color] },
              width: width,
              height: height,
              title: "Cumulative Flow Diagram"
            }) %>
          </div>
          
        </td>
      </tr>
    </table>
    
  </div>
  
  
  
</div>
